#+TITLE: Pattern Play Classes Readme

Classes to put inside the play key of a pattern when playing, in order to do various customized tasks.

The play key is evaluated as function.  Example:
#+begin_src sclang
() +> \test;
(degree: 10) ++> \test;
(play: { "hello world".postln; }) ++> \test;
(play: { currentEnvironment.postln; }) ++> \test;
#+end_src

#+RESULTS:
: () +> \test;
: (degree: 10) ++> \test;
: (play: { "hello world".postln; }) ++> \test;
: (play: { currentEnvironment.postln; }) ++> \test;

Instances of a class that are substituted for such a function the play key should respond to value.

Alternatively, one may store an instance in any key and have it evaluated with =next=.

* Send keys-values as OSC:

Send all key value pairs as an OSC message.
Prototype:

#+begin_src sclang
(degree: 1) ++> \test;
(test: PFunc{ currentEnvironment keysValuesDo:
.postln; }) ++> \test;
#+end_src
