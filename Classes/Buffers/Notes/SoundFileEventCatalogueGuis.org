#+TITLE: Sound File Event Catalogue Guis

-------- draft 230712 --------

* Classes
** PlayBufTemplates

** SoundBufferGui

** BufCode

** EditSoundPlayer

** PlayFunc

* Folders and Files

** sc-project/PlayBuf
*** sc-project/PlayBuf/code
*** sc-project/PlayBuf/playfuncs

** sc-hacks-redux/Classes/OperatorsAndShortcuts/UGenFuncClasses


-------- draft before 230712 --------
* Classes

** SoundFileGui

A SoundFileView with mouse-scrolling functionality.
Below it a horizontal range view for selecting o

EventSets
** SoundFileSettings (.gui)

Opens a gui for browsing a set of sound file events.

Class variable =sets= contains a dictionary of sets, where each set corresponds to a folder under =Project.rootFolder +/+ AudioSampleEvents/=.

Each set contains the contents parsed from the corresponding subfolder of =AudioSampleEvents=, stored as dictionaries in 2 instance variables of =SoundFileSettings=, =playfuncs= and =events=.

1. playfuncs :: Functions for playing the buffer, to used by the play event. Each entry corresponds to a file inside folder =playfuncs=, and is stored using the base name of the file (without extension) as key.
2. events :: Scripts setting key variables of the sound file buffer playing event.

Assembles an event for playing an (audio file) buffer by combining elements from the 2 dictionaries above.

The event is created in 3 steps:

1. Create an event =e= by evaluating the string of an event file inside an event with =Event make: ...=. (see code below)
2. Store in event =e= the play function: =~play = { ~playfunc.play }=.
3. Store the playfunc obtained by loading the selected playfunc file in event =e= under key =~playfunc=.

*** Code for creating the event from an event file (must test this!)
#+begin_src sclang
// eventfile is an instance variable of SoundFileSettings ?
Event make: { eventfile.load } // hypothetical example code
#+end_src


* Storing sound file events and playfuncs

By default inside the projects folder (default: ~/sc-projects), in subfolder =AudioSampleEvents=.

At the top level below =AudioSampleEvents= are folders corresponding to "Sets", where each folder contains a set consisting of playfuncs and of event configurations for playing

#+begin_example
sc-projects
     AudioSampleEvents  // contains all sets, each set in its own folder
          Set1          // contains Playfuncs and Event settings
              Playfuncs // contains the playfuncs
                    playfunc1.scd  // a playfunc - see example below
                    playfunc2.scd
              Settings  // contains settings organized by buffer name.
                    crickets // contains setttings for buffer =\crickets=
                          crickets00.scd // example of event settings - see below.
#+end_example

** playfunc example

#+begin_src sclang
{
	PlayBuf.ar(
		~buf.buf.numChannels,
		~buf.buf,
		\rate.br(~rate ? 1),
		\trigger.br(1),
		\startpos.br(~startpos ? 0),
		\loop.br(~loop ? 0),
		Done.freeSelf
	)
}
#+end_src

** event settings example

#+begin_src sclang
// the next line is implied by the folder name in which the file is based:
// ~buf = \crickets;

~synthfunc = \playbuf; // which playfunc to use
// ~startpos = ... // additional parameter settings
#+end_src
